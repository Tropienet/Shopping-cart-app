{"ast":null,"code":"var _jsxFileName = \"/home/tin/interviews/firebaseKodius/kodiusapptry02/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport firebase from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [schools, setSchools] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const ref = firebase.firestore().collection(\"schools\");\n  console.log(ref);\n\n  function getSchools() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        items.push(doc.data());\n      });\n      setSchools(items);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getSchools();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: schools.map(school => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: schools.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: school.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, school.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yb41qQpFCb9SJtCH4MrV/UcnmXE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tin/interviews/firebaseKodius/kodiusapptry02/src/App.js"],"names":["React","useEffect","useState","firebase","App","schools","setSchools","loading","setLoading","ref","firestore","collection","console","log","getSchools","onSnapshot","querySnapshot","items","forEach","doc","push","data","map","school","title","desc","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMO,GAAG,GAAGN,QAAQ,CAACO,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;;AAEA,WAASK,UAAT,GAAsB;AACpBN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,GAAG,CAACM,UAAJ,CAAgBC,aAAD,IAAmB;AAChC,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC7BF,QAAAA,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACE,IAAJ,EAAX;AACD,OAFD;AAGAf,MAAAA,UAAU,CAACW,KAAD,CAAV;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD;AAQD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGP,OAAH,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACEF,OAAO,CAACiB,GAAR,CAAaC,MAAD,iBACV;AAAA,8BACE;AAAA,kBAAKlB,OAAO,CAACmB;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUF,MAAM,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArCQtB,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport firebase from \"./firebase\"\n\nfunction App() {\n  const [schools, setSchools] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const ref = firebase.firestore().collection(\"schools\");\n  console.log(ref);\n\n  function getSchools() {\n    setLoading(true);\n    ref.onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((doc) => {\n        items.push(doc.data());\n      });\n      setSchools(items);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getSchools();\n  }, []);\n\n  if(loading) {\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <div className=\"App\">\n     {schools.map((school) => (\n        <div key={school.id}>\n          <h2>{schools.title}</h2>\n          <p>{school.desc}</p>\n        </div>\n     ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}